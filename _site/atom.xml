<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-28T15:11:51-07:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Ixchel González-Ramírez</title><subtitle>My academic site</subtitle><entry><title type="html">SEEDS OF CHANGE</title><link href="http://localhost:4000/spanish/media/seeds/" rel="alternate" type="text/html" title="SEEDS OF CHANGE" /><published>2018-12-15T00:00:00-08:00</published><updated>2018-12-15T00:00:00-08:00</updated><id>http://localhost:4000/spanish/media/seeds</id><content type="html" xml:base="http://localhost:4000/spanish/media/seeds/"><![CDATA[<p><a href="http://matthewkling.net/shiny/seedsofchange/"><img src="/images/seedsofchange.png" alt="SOC" /></a></p>

<p>This latest project, <a href="http://matthewkling.net/shiny/seedsofchange/">Seeds of Change</a>, is once again in the shiny apps category. Developed as part of a partnership with folks at the National Park Service and the Golden Gate National Recreation Area, the tool is aimed at helping restoration managers identify seed collection localities for restoration projects by leveraging data on soil, climate, and projected climate change. Users select a planting site and a focal species, and the app predicts which populations across the species’ range will have seeds that are most adapted to the future environment of the planting site.</p>

<p>This is by no means the first tool out there to address this need, including some great seed provenancing apps like the <a href="https://seedlotselectiontool.org/sst/">Seedlot Selection Tool</a>. But our version does include some new bells and whistles that we hope will help advance the utility for managers. It leverages a new <a href="https://soilgrids.org/">soil dataset</a>, a step toward addressing an unmet need to account for local adaptation to different soil types. It integrates species distribution maps for every species of native plant within California. It includes past and future climate variables that are ecologically imporant in mediterranean-type ecosystems, including climatic water deficit and actual evapotranspiration. And it uses a new smoothing parameter that we developed to more realistically model how gene flow among sites might affect their adaptive evolution.</p>

<p>The app is still a prototype, and with ongoing work on this project the tool is sure to change (and hopefully improve in performance speed…) as we integrate feedback from park managers at GGNRA and other interested parties. So please get in touch if you have thoughts!</p>

<p>Our team on this project includes fellow UCB students Sean Brown and Amelia Harvey, NPS climate scientist Patrick Gonzalez, and GGRNA seed ecologist Stacy Jacobsen.</p>]]></content><author><name></name></author><category term="spanish" /><category term="media" /><summary type="html"><![CDATA[Predictive seed provenancing for ecological restoration]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22seeds_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22seeds_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SEEDS OF CHANGE</title><link href="http://localhost:4000/media/seeds/" rel="alternate" type="text/html" title="SEEDS OF CHANGE" /><published>2018-12-15T00:00:00-08:00</published><updated>2018-12-15T00:00:00-08:00</updated><id>http://localhost:4000/media/seeds</id><content type="html" xml:base="http://localhost:4000/media/seeds/"><![CDATA[<p><a href="http://matthewkling.net/shiny/seedsofchange/"><img src="/images/seedsofchange.png" alt="SOC" /></a></p>

<p>This latest project, <a href="http://matthewkling.net/shiny/seedsofchange/">Seeds of Change</a>, is once again in the shiny apps category. Developed as part of a partnership with folks at the National Park Service and the Golden Gate National Recreation Area, the tool is aimed at helping restoration managers identify seed collection localities for restoration projects by leveraging data on soil, climate, and projected climate change. Users select a planting site and a focal species, and the app predicts which populations across the species’ range will have seeds that are most adapted to the future environment of the planting site.</p>

<p>This is by no means the first tool out there to address this need, including some great seed provenancing apps like the <a href="https://seedlotselectiontool.org/sst/">Seedlot Selection Tool</a>. But our version does include some new bells and whistles that we hope will help advance the utility for managers. It leverages a new <a href="https://soilgrids.org/">soil dataset</a>, a step toward addressing an unmet need to account for local adaptation to different soil types. It integrates species distribution maps for every species of native plant within California. It includes past and future climate variables that are ecologically imporant in mediterranean-type ecosystems, including climatic water deficit and actual evapotranspiration. And it uses a new smoothing parameter that we developed to more realistically model how gene flow among sites might affect their adaptive evolution.</p>

<p>The app is still a prototype, and with ongoing work on this project the tool is sure to change (and hopefully improve in performance speed…) as we integrate feedback from park managers at GGNRA and other interested parties. So please get in touch if you have thoughts!</p>

<p>Our team on this project includes fellow UCB students Sean Brown and Amelia Harvey, NPS climate scientist Patrick Gonzalez, and GGRNA seed ecologist Stacy Jacobsen.</p>]]></content><author><name></name></author><category term="media" /><summary type="html"><![CDATA[Predictive seed provenancing for ecological restoration]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22seeds_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22seeds_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">PHYLOGENY &amp;amp; CONSERVATION</title><link href="http://localhost:4000/spanish/media/phylo/" rel="alternate" type="text/html" title="PHYLOGENY &amp;amp; CONSERVATION" /><published>2018-11-19T00:00:00-08:00</published><updated>2018-11-19T00:00:00-08:00</updated><id>http://localhost:4000/spanish/media/phylo</id><content type="html" xml:base="http://localhost:4000/spanish/media/phylo/"><![CDATA[<p><a href="http://ucjeps.berkeley.edu/phylodiversity/"><img src="/images/cappa.png" alt="CAPPA" /></a></p>

<p>We have a <a href="http://dx.doi.org/10.1098/rstb.2017.0397">new paper</a> out today in <em>PhilTransB</em> that looks at the geographic ranges and evolutionary relationships of 5221 California plant species to identify priority locations for increased land protection. To accompany the paper I built the <a href="http://ucjeps.berkeley.edu/phylodiversity/">California Plant Phylodiversity Atlas</a>, a web application that lets users interact with the phylogeny, geography, and local community dimensions of our biodiversity dataset. It was a fun Shiny app to put together, including use of the plotly, leaflet, and DT libraries, as well as integration with images from the <a href="http://ucjeps.berkeley.edu/eflora/">Jepson eFlora</a>. Check it out and let me know what you think!</p>]]></content><author><name></name></author><category term="spanish" /><category term="media" /><summary type="html"><![CDATA[The California Plant Phylodiversity Atlas]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22cappa_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22cappa_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">PHYLOGENY &amp;amp; CONSERVATION</title><link href="http://localhost:4000/media/phylo/" rel="alternate" type="text/html" title="PHYLOGENY &amp;amp; CONSERVATION" /><published>2018-11-19T00:00:00-08:00</published><updated>2018-11-19T00:00:00-08:00</updated><id>http://localhost:4000/media/phylo</id><content type="html" xml:base="http://localhost:4000/media/phylo/"><![CDATA[<p><a href="http://ucjeps.berkeley.edu/phylodiversity/"><img src="/images/cappa.png" alt="CAPPA" /></a></p>

<p>We have a <a href="http://dx.doi.org/10.1098/rstb.2017.0397">new paper</a> out today in <em>PhilTransB</em> that looks at the geographic ranges and evolutionary relationships of 5221 California plant species to identify priority locations for increased land protection. To accompany the paper I built the <a href="http://ucjeps.berkeley.edu/phylodiversity/">California Plant Phylodiversity Atlas</a>, a web application that lets users interact with the phylogeny, geography, and local community dimensions of our biodiversity dataset. It was a fun Shiny app to put together, including use of the plotly, leaflet, and DT libraries, as well as integration with images from the <a href="http://ucjeps.berkeley.edu/eflora/">Jepson eFlora</a>. Check it out and let me know what you think!</p>]]></content><author><name></name></author><category term="media" /><summary type="html"><![CDATA[The California Plant Phylodiversity Atlas]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22cappa_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22cappa_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CHIAROSCURO</title><link href="http://localhost:4000/spanish/media/rayshader/" rel="alternate" type="text/html" title="CHIAROSCURO" /><published>2018-08-16T00:00:00-07:00</published><updated>2018-08-16T00:00:00-07:00</updated><id>http://localhost:4000/spanish/media/rayshader</id><content type="html" xml:base="http://localhost:4000/spanish/media/rayshader/"><![CDATA[<p><img src="/images/insolation.gif" alt="insolation" /></p>

<p>A lot of our research in the Ackerly lab is focused on understanding how climate variation shapes plant ecology, and one key driver of climate is local topography. In the northern hemisphere, higher radiation loads make south-facing slopes much warmer and drier on average—but solar radiation varies based on latitude, season, and time of day, as well as the topographic slope and aspect of a given site. Partly just as an excuse to play with the new <code class="language-plaintext highlighter-rouge">rayshader</code> package, I thought I’d take a stab at creatting a realistic sunlight animation for Pepperwood Preserve, a site in the California coast ranges where our lab does extensive long-term forest monitoring research.</p>

<p>Rayshader provides a set of tools to generate beautiful and realistic hillshaded graphics from digital elevation data. The package lets you specify any arbitrary sun position, but I wanted to use use the sun’s real trajectory across the sky. For this I turned to the <code class="language-plaintext highlighter-rouge">insol</code> package, which we can use to compute the exact azimuth and zenith of the sun based on a date, time of day, and geographic coordintes. Here is some solar position data for Pepperwood, showing the swath of sky traversed by the sun at different times of year here in central California:</p>

<p><img src="/images/sun_positions.png" alt="trajectories" /></p>

<p>The lower line shows the sun’s daily path on the winter solstice. To animate how landscape lighting at Pepperwood evolves over the course of the solstice, we can generate a set of sun points along the line, use <code class="language-plaintext highlighter-rouge">rayshader</code> in combination with some high-resolution elevation data to generate a hillshade image for each sun point, and then stitch the frames together into a gif using the <code class="language-plaintext highlighter-rouge">magick</code> package. This gives us the visualization at the top of the post. Pretty fun what you can do with just a few lines of R code these days! The core code is just the folowing:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># load packages</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">raster</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">insol</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magick</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rayshader</span><span class="p">)</span><span class="w">

</span><span class="c1"># load elevation data</span><span class="w">
</span><span class="n">elmat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raster</span><span class="p">(</span><span class="s2">"dem.tif"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.matrix</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">t</span><span class="p">()</span><span class="w">
</span><span class="n">zscale</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w"> </span><span class="c1"># ratio of pixel resolution (10m) to elevation unit (m)</span><span class="w">

</span><span class="c1"># generate a sequence of solar positions</span><span class="w">
</span><span class="n">sp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">24</span><span class="p">),</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"min"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">JD</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">sunvector</span><span class="p">(</span><span class="m">38</span><span class="p">,</span><span class="m">-122</span><span class="p">,</span><span class="m">-7</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># lat, long, time zone at Pepperwood</span><span class="w">
      </span><span class="n">sunpos</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
      </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">mutate</span><span class="p">(</span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">.</span><span class="p">),</span><span class="w">
             </span><span class="n">zenith</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">90</span><span class="o">-</span><span class="n">zenith</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">filter</span><span class="p">(</span><span class="n">zenith</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">-10</span><span class="p">,</span><span class="w"> </span><span class="c1"># exclue nighttime</span><span class="w">
             </span><span class="n">id</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">3</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="c1"># keep every third frame</span><span class="w">

</span><span class="c1"># open magick graphics device</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">image_graph</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="o">=</span><span class="m">500</span><span class="p">)</span><span class="w">

</span><span class="c1"># generate hillshade image for each solar position</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">sp</span><span class="p">)){</span><span class="w">
      </span><span class="n">azimuth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">azimuth</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      </span><span class="n">zenith</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">zenith</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      
      </span><span class="n">texture</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_texture</span><span class="p">(</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="s2">"darkgreen"</span><span class="p">,</span><span class="w">
                                </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">)</span><span class="w">
      
      </span><span class="n">elmat</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">sphere_shade</span><span class="p">(</span><span class="n">texture</span><span class="o">=</span><span class="n">texture</span><span class="p">,</span><span class="w"> </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ambient_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ray_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w">
                                 </span><span class="n">anglebreaks</span><span class="o">=</span><span class="n">seq</span><span class="p">(</span><span class="n">zenith</span><span class="m">-4</span><span class="p">,</span><span class="w"> </span><span class="n">zenith</span><span class="m">+4</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
                                 </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">),</span><span class="w">
                       </span><span class="n">max_darken</span><span class="o">=</span><span class="m">.3</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">plot_map</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># save animation</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_animate</span><span class="p">(</span><span class="n">fps</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_write</span><span class="p">(</span><span class="s2">"animation.gif"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="spanish" /><category term="media" /><summary type="html"><![CDATA[Animating shifting sunlight over complex terrain]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22topo_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22topo_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">CHIAROSCURO</title><link href="http://localhost:4000/media/rayshader/" rel="alternate" type="text/html" title="CHIAROSCURO" /><published>2018-08-16T00:00:00-07:00</published><updated>2018-08-16T00:00:00-07:00</updated><id>http://localhost:4000/media/rayshader</id><content type="html" xml:base="http://localhost:4000/media/rayshader/"><![CDATA[<p><img src="/images/insolation.gif" alt="insolation" /></p>

<p>A lot of our research in the Ackerly lab is focused on understanding how climate variation shapes plant ecology, and one key driver of climate is local topography. In the northern hemisphere, higher radiation loads make south-facing slopes much warmer and drier on average—but solar radiation varies based on latitude, season, and time of day, as well as the topographic slope and aspect of a given site. Partly just as an excuse to play with the new <code class="language-plaintext highlighter-rouge">rayshader</code> package, I thought I’d take a stab at creatting a realistic sunlight animation for Pepperwood Preserve, a site in the California coast ranges where our lab does extensive long-term forest monitoring research.</p>

<p>Rayshader provides a set of tools to generate beautiful and realistic hillshaded graphics from digital elevation data. The package lets you specify any arbitrary sun position, but I wanted to use use the sun’s real trajectory across the sky. For this I turned to the <code class="language-plaintext highlighter-rouge">insol</code> package, which we can use to compute the exact azimuth and zenith of the sun based on a date, time of day, and geographic coordintes. Here is some solar position data for Pepperwood, showing the swath of sky traversed by the sun at different times of year here in central California:</p>

<p><img src="/images/sun_positions.png" alt="trajectories" /></p>

<p>The lower line shows the sun’s daily path on the winter solstice. To animate how landscape lighting at Pepperwood evolves over the course of the solstice, we can generate a set of sun points along the line, use <code class="language-plaintext highlighter-rouge">rayshader</code> in combination with some high-resolution elevation data to generate a hillshade image for each sun point, and then stitch the frames together into a gif using the <code class="language-plaintext highlighter-rouge">magick</code> package. This gives us the visualization at the top of the post. Pretty fun what you can do with just a few lines of R code these days! The core code is just the folowing:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># load packages</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">raster</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">insol</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magick</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rayshader</span><span class="p">)</span><span class="w">

</span><span class="c1"># load elevation data</span><span class="w">
</span><span class="n">elmat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raster</span><span class="p">(</span><span class="s2">"dem.tif"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.matrix</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">t</span><span class="p">()</span><span class="w">
</span><span class="n">zscale</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w"> </span><span class="c1"># ratio of pixel resolution (10m) to elevation unit (m)</span><span class="w">

</span><span class="c1"># generate a sequence of solar positions</span><span class="w">
</span><span class="n">sp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">24</span><span class="p">),</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"min"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">JD</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">sunvector</span><span class="p">(</span><span class="m">38</span><span class="p">,</span><span class="m">-122</span><span class="p">,</span><span class="m">-7</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># lat, long, time zone at Pepperwood</span><span class="w">
      </span><span class="n">sunpos</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
      </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">mutate</span><span class="p">(</span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">.</span><span class="p">),</span><span class="w">
             </span><span class="n">zenith</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">90</span><span class="o">-</span><span class="n">zenith</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">filter</span><span class="p">(</span><span class="n">zenith</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">-10</span><span class="p">,</span><span class="w"> </span><span class="c1"># exclue nighttime</span><span class="w">
             </span><span class="n">id</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">3</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="c1"># keep every third frame</span><span class="w">

</span><span class="c1"># open magick graphics device</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">image_graph</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="o">=</span><span class="m">500</span><span class="p">)</span><span class="w">

</span><span class="c1"># generate hillshade image for each solar position</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">sp</span><span class="p">)){</span><span class="w">
      </span><span class="n">azimuth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">azimuth</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      </span><span class="n">zenith</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">zenith</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      
      </span><span class="n">texture</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_texture</span><span class="p">(</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="s2">"darkgreen"</span><span class="p">,</span><span class="w">
                                </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">)</span><span class="w">
      
      </span><span class="n">elmat</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">sphere_shade</span><span class="p">(</span><span class="n">texture</span><span class="o">=</span><span class="n">texture</span><span class="p">,</span><span class="w"> </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ambient_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ray_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w">
                                 </span><span class="n">anglebreaks</span><span class="o">=</span><span class="n">seq</span><span class="p">(</span><span class="n">zenith</span><span class="m">-4</span><span class="p">,</span><span class="w"> </span><span class="n">zenith</span><span class="m">+4</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
                                 </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">),</span><span class="w">
                       </span><span class="n">max_darken</span><span class="o">=</span><span class="m">.3</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">plot_map</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># save animation</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_animate</span><span class="p">(</span><span class="n">fps</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_write</span><span class="p">(</span><span class="s2">"animation.gif"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="media" /><summary type="html"><![CDATA[Animating shifting sunlight over complex terrain]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22topo_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22topo_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ORB WEAVER</title><link href="http://localhost:4000/media/orb/" rel="alternate" type="text/html" title="ORB WEAVER" /><published>2018-05-15T00:00:00-07:00</published><updated>2018-05-15T00:00:00-07:00</updated><id>http://localhost:4000/media/orb</id><content type="html" xml:base="http://localhost:4000/media/orb/"><![CDATA[<p><img src="/images/orb_weaver.gif" alt="orb weaver" /></p>

<p>Code at <a href="https://github.com/matthewkling/orb-weaver">https://github.com/matthewkling/orb-weaver</a></p>]]></content><author><name></name></author><category term="media" /><summary type="html"><![CDATA[A bit of algorithmic art]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22orb_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22orb_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ORB WEAVER</title><link href="http://localhost:4000/spanish/media/orb/" rel="alternate" type="text/html" title="ORB WEAVER" /><published>2018-05-15T00:00:00-07:00</published><updated>2018-05-15T00:00:00-07:00</updated><id>http://localhost:4000/spanish/media/orb</id><content type="html" xml:base="http://localhost:4000/spanish/media/orb/"><![CDATA[<p><img src="/images/orb_weaver.gif" alt="orb weaver" /></p>

<p>Code at <a href="https://github.com/matthewkling/orb-weaver">https://github.com/matthewkling/orb-weaver</a></p>]]></content><author><name></name></author><category term="spanish" /><category term="media" /><summary type="html"><![CDATA[A bit of algorithmic art]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22orb_thumb.jpg%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22orb_thumb.jpg%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">NATLAS</title><link href="http://localhost:4000/spanish/media/natlas/" rel="alternate" type="text/html" title="NATLAS" /><published>2017-06-12T00:00:00-07:00</published><updated>2017-06-12T00:00:00-07:00</updated><id>http://localhost:4000/spanish/media/natlas</id><content type="html" xml:base="http://localhost:4000/spanish/media/natlas/"><![CDATA[<p><a href="https://matthewkling.github.io/natlas/"><img src="/images/natlas.png" alt="NATLAS" /></a></p>

<p>I finally got the excuse I needed to learn d3.js, while leading the data visualization portion of a recent team project with the National Park Service through the Bekeley DS421 program. We used iNaturalist data to create <a href="https://matthewkling.github.io/natlas/">NATLAS</a>, a little web app that lets users explore citizen science biodiversity observations made in national parks near San Francisco. If you don’t know <a href="http://inaturalist.org">iNaturalist</a>, you should – it’s an awesome platform that lets users document species occurrences with a smartphone app, collectively generating a huge crowd-sourced dataset on what biodiversity is present when and where. And they open-source their data, empowering the rest of us to conduct research and conservation alayses or create applications like NATLAS.</p>

<p>NATLAS is an interactive dashboard that visualizes taxonomic, geographic, temporal, and human patterns in observations made in Point Reyes National Seashore and Golden Gate National Recreation Area. For now it’s just a prototype with more locations and features planned in the future, but go ahead and play around.</p>

<p>The most fun piece is the sunburst plot in the upper left, a zoomable tree of life for all observed species in the park that also serves as a pie chart indicating the number of observations, observers, or species per taxon. There’s something oddly compelling about clicking around the tree, I’ve spent more time doing that than I’d like to admit.</p>

<p>The scatterplot classifies every cell phone naturalist in the database, ranging from one-time dablers to seasoned devotees, and lets you explore the observations made by each one. The map and timelines are more self-explanatory. In the center, you can click to toggle between parks, between types of taxonomic tree, and between summarizing data by observers, observations, or species. Photos and more info for each taxon can be accessed by the link on the titlebar to the iNaturalist website.</p>]]></content><author><name></name></author><category term="spanish" /><category term="media" /><summary type="html"><![CDATA[An atlas of citizen naturalist observations.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22natlas_thumb.png%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22natlas_thumb.png%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">NATLAS</title><link href="http://localhost:4000/media/natlas/" rel="alternate" type="text/html" title="NATLAS" /><published>2017-06-12T00:00:00-07:00</published><updated>2017-06-12T00:00:00-07:00</updated><id>http://localhost:4000/media/natlas</id><content type="html" xml:base="http://localhost:4000/media/natlas/"><![CDATA[<p><a href="https://matthewkling.github.io/natlas/"><img src="/images/natlas.png" alt="NATLAS" /></a></p>

<p>I finally got the excuse I needed to learn d3.js, while leading the data visualization portion of a recent team project with the National Park Service through the Bekeley DS421 program. We used iNaturalist data to create <a href="https://matthewkling.github.io/natlas/">NATLAS</a>, a little web app that lets users explore citizen science biodiversity observations made in national parks near San Francisco. If you don’t know <a href="http://inaturalist.org">iNaturalist</a>, you should – it’s an awesome platform that lets users document species occurrences with a smartphone app, collectively generating a huge crowd-sourced dataset on what biodiversity is present when and where. And they open-source their data, empowering the rest of us to conduct research and conservation alayses or create applications like NATLAS.</p>

<p>NATLAS is an interactive dashboard that visualizes taxonomic, geographic, temporal, and human patterns in observations made in Point Reyes National Seashore and Golden Gate National Recreation Area. For now it’s just a prototype with more locations and features planned in the future, but go ahead and play around.</p>

<p>The most fun piece is the sunburst plot in the upper left, a zoomable tree of life for all observed species in the park that also serves as a pie chart indicating the number of observations, observers, or species per taxon. There’s something oddly compelling about clicking around the tree, I’ve spent more time doing that than I’d like to admit.</p>

<p>The scatterplot classifies every cell phone naturalist in the database, ranging from one-time dablers to seasoned devotees, and lets you explore the observations made by each one. The map and timelines are more self-explanatory. In the center, you can click to toggle between parks, between types of taxonomic tree, and between summarizing data by observers, observations, or species. Photos and more info for each taxon can be accessed by the link on the titlebar to the iNaturalist website.</p>]]></content><author><name></name></author><category term="media" /><summary type="html"><![CDATA[An atlas of citizen naturalist observations.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22natlas_thumb.png%22%7D" /><media:content medium="image" url="http://localhost:4000/%7B%22feature%22=%3Enil,%20%22teaser%22=%3E%22natlas_thumb.png%22%7D" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>