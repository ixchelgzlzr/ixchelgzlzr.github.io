I"¨.<p><img src="/images/insolation.gif" alt="insolation" /></p>

<p>A lot of our research in the Ackerly lab is focused on understanding how climate variation shapes plant ecology, and one key driver of climate is local topography. In the northern hemisphere, higher radiation loads make south-facing slopes much warmer and drier on averageâ€”but solar radiation varies based on latitude, season, and time of day, as well as the topographic slope and aspect of a given site. Partly just as an excuse to play with the new <code class="language-plaintext highlighter-rouge">rayshader</code> package, I thought Iâ€™d take a stab at creatting a realistic sunlight animation for Pepperwood Preserve, a site in the California coast ranges where our lab does extensive long-term forest monitoring research.</p>

<p>Rayshader provides a set of tools to generate beautiful and realistic hillshaded graphics from digital elevation data. The package lets you specify any arbitrary sun position, but I wanted to use use the sunâ€™s real trajectory across the sky. For this I turned to the <code class="language-plaintext highlighter-rouge">insol</code> package, which we can use to compute the exact azimuth and zenith of the sun based on a date, time of day, and geographic coordintes. Here is some solar position data for Pepperwood, showing the swath of sky traversed by the sun at different times of year here in central California:</p>

<p><img src="/images/sun_positions.png" alt="trajectories" /></p>

<p>The lower line shows the sunâ€™s daily path on the winter solstice. To animate how landscape lighting at Pepperwood evolves over the course of the solstice, we can generate a set of sun points along the line, use <code class="language-plaintext highlighter-rouge">rayshader</code> in combination with some high-resolution elevation data to generate a hillshade image for each sun point, and then stitch the frames together into a gif using the <code class="language-plaintext highlighter-rouge">magick</code> package. This gives us the visualization at the top of the post. Pretty fun what you can do with just a few lines of R code these days! The core code is just the folowing:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># load packages</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">raster</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">insol</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">magick</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rayshader</span><span class="p">)</span><span class="w">

</span><span class="c1"># load elevation data</span><span class="w">
</span><span class="n">elmat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raster</span><span class="p">(</span><span class="s2">"dem.tif"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">as.matrix</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">t</span><span class="p">()</span><span class="w">
</span><span class="n">zscale</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w"> </span><span class="c1"># ratio of pixel resolution (10m) to elevation unit (m)</span><span class="w">

</span><span class="c1"># generate a sequence of solar positions</span><span class="w">
</span><span class="n">sp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">ISOdate</span><span class="p">(</span><span class="m">2012</span><span class="p">,</span><span class="m">12</span><span class="p">,</span><span class="m">20</span><span class="p">,</span><span class="m">24</span><span class="p">),</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"min"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">JD</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">sunvector</span><span class="p">(</span><span class="m">38</span><span class="p">,</span><span class="m">-122</span><span class="p">,</span><span class="m">-7</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># lat, long, time zone at Pepperwood</span><span class="w">
      </span><span class="n">sunpos</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
      </span><span class="n">as.data.frame</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">mutate</span><span class="p">(</span><span class="n">id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">.</span><span class="p">),</span><span class="w">
             </span><span class="n">zenith</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">90</span><span class="o">-</span><span class="n">zenith</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">filter</span><span class="p">(</span><span class="n">zenith</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">-10</span><span class="p">,</span><span class="w"> </span><span class="c1"># exclue nighttime</span><span class="w">
             </span><span class="n">id</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">3</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="c1"># keep every third frame</span><span class="w">

</span><span class="c1"># open magick graphics device</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">image_graph</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="m">500</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="o">=</span><span class="m">500</span><span class="p">)</span><span class="w">

</span><span class="c1"># generate hillshade image for each solar position</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">nrow</span><span class="p">(</span><span class="n">sp</span><span class="p">)){</span><span class="w">
      </span><span class="n">azimuth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">azimuth</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      </span><span class="n">zenith</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sp</span><span class="o">$</span><span class="n">zenith</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
      
      </span><span class="n">texture</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_texture</span><span class="p">(</span><span class="s2">"red"</span><span class="p">,</span><span class="w"> </span><span class="s2">"darkgreen"</span><span class="p">,</span><span class="w">
                                </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">,</span><span class="w"> </span><span class="s2">"khaki"</span><span class="p">)</span><span class="w">
      
      </span><span class="n">elmat</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">sphere_shade</span><span class="p">(</span><span class="n">texture</span><span class="o">=</span><span class="n">texture</span><span class="p">,</span><span class="w"> </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ambient_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">add_shadow</span><span class="p">(</span><span class="n">ray_shade</span><span class="p">(</span><span class="n">elmat</span><span class="p">,</span><span class="w">
                                 </span><span class="n">anglebreaks</span><span class="o">=</span><span class="n">seq</span><span class="p">(</span><span class="n">zenith</span><span class="m">-4</span><span class="p">,</span><span class="w"> </span><span class="n">zenith</span><span class="m">+4</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
                                 </span><span class="n">sunangle</span><span class="o">=</span><span class="n">azimuth</span><span class="p">,</span><span class="w"> </span><span class="n">zscale</span><span class="o">=</span><span class="n">zscale</span><span class="p">),</span><span class="w">
                       </span><span class="n">max_darken</span><span class="o">=</span><span class="m">.3</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">plot_map</span><span class="p">()</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># save animation</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="n">img</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_animate</span><span class="p">(</span><span class="n">fps</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">image_write</span><span class="p">(</span><span class="s2">"animation.gif"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
:ET